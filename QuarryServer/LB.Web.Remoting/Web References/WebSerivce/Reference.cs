//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace LB.Web.WebSerivce {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BaseInfoServiceSoap", Namespace="http://tempuri.org/")]
    public partial class BaseInfoService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CallSPOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallDirectSQLOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallViewOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BaseInfoService() {
            this.Url = global::LB.Web.Properties.Settings.Default.LB_Web_Remoting_WebSerivce_BaseInfoService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CallSPCompletedEventHandler CallSPCompleted;
        
        /// <remarks/>
        public event CallDirectSQLCompletedEventHandler CallDirectSQLCompleted;
        
        /// <remarks/>
        public event CallViewCompletedEventHandler CallViewCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CallSP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("dsReturn")]
        public System.Data.DataSet CallSP(string LoginName, int iSPType, System.Data.DataTable dtInput, out System.Data.DataTable dtOut) {
            object[] results = this.Invoke("CallSP", new object[] {
                        LoginName,
                        iSPType,
                        dtInput});
            dtOut = ((System.Data.DataTable)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CallSPAsync(string LoginName, int iSPType, System.Data.DataTable dtInput) {
            this.CallSPAsync(LoginName, iSPType, dtInput, null);
        }
        
        /// <remarks/>
        public void CallSPAsync(string LoginName, int iSPType, System.Data.DataTable dtInput, object userState) {
            if ((this.CallSPOperationCompleted == null)) {
                this.CallSPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallSPOperationCompleted);
            }
            this.InvokeAsync("CallSP", new object[] {
                        LoginName,
                        iSPType,
                        dtInput}, this.CallSPOperationCompleted, userState);
        }
        
        private void OnCallSPOperationCompleted(object arg) {
            if ((this.CallSPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallSPCompleted(this, new CallSPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CallDirectSQL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable CallDirectSQL(string LoginName, string strSQL) {
            object[] results = this.Invoke("CallDirectSQL", new object[] {
                        LoginName,
                        strSQL});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void CallDirectSQLAsync(string LoginName, string strSQL) {
            this.CallDirectSQLAsync(LoginName, strSQL, null);
        }
        
        /// <remarks/>
        public void CallDirectSQLAsync(string LoginName, string strSQL, object userState) {
            if ((this.CallDirectSQLOperationCompleted == null)) {
                this.CallDirectSQLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallDirectSQLOperationCompleted);
            }
            this.InvokeAsync("CallDirectSQL", new object[] {
                        LoginName,
                        strSQL}, this.CallDirectSQLOperationCompleted, userState);
        }
        
        private void OnCallDirectSQLOperationCompleted(object arg) {
            if ((this.CallDirectSQLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallDirectSQLCompleted(this, new CallDirectSQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CallView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable CallView(string LoginName, int iViewType, string strFieldNames, string strWhere, string strOrderBy) {
            object[] results = this.Invoke("CallView", new object[] {
                        LoginName,
                        iViewType,
                        strFieldNames,
                        strWhere,
                        strOrderBy});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void CallViewAsync(string LoginName, int iViewType, string strFieldNames, string strWhere, string strOrderBy) {
            this.CallViewAsync(LoginName, iViewType, strFieldNames, strWhere, strOrderBy, null);
        }
        
        /// <remarks/>
        public void CallViewAsync(string LoginName, int iViewType, string strFieldNames, string strWhere, string strOrderBy, object userState) {
            if ((this.CallViewOperationCompleted == null)) {
                this.CallViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallViewOperationCompleted);
            }
            this.InvokeAsync("CallView", new object[] {
                        LoginName,
                        iViewType,
                        strFieldNames,
                        strWhere,
                        strOrderBy}, this.CallViewOperationCompleted, userState);
        }
        
        private void OnCallViewOperationCompleted(object arg) {
            if ((this.CallViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallViewCompleted(this, new CallViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CallSPCompletedEventHandler(object sender, CallSPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallSPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallSPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CallDirectSQLCompletedEventHandler(object sender, CallDirectSQLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallDirectSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallDirectSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CallViewCompletedEventHandler(object sender, CallViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591