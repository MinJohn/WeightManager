<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dotfuscatorMap SYSTEM "http://www.preemptive.com/dotfuscator/dtd/dotfuscatorMap_v1.2.dtd">
<dotfuscatorMap version="1.1">
    <header>
        <timestamp>2018-06-04T20:06:32</timestamp>
        <product version="4.9.6005.29054" user="firefly " serial="124576-PRO-AC6AB7C5-7A50E312-F0BBEBCC-829D98D7">Dotfuscator Professional Edition</product>
    </header>
    <mapping>
        <module>
            <name>LB.Base.dll</name>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;</name>
                <newname>b</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>699FB291AF1B60327B8807FDCF384191B0AFB631</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.LBWebService.ConnectServerCompletedEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(object[], System.Exception, bool, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Result</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object[]</signature>
                        <name>results</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Result</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>LB.LBWebService.ConnectServerCompletedEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, LB.LBWebService.ConnectServerCompletedEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, LB.LBWebService.ConnectServerCompletedEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.LBWebService.HelloWorldCompletedEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(object[], System.Exception, bool, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Result</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object[]</signature>
                        <name>results</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Result</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>LB.LBWebService.HelloWorldCompletedEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, LB.LBWebService.HelloWorldCompletedEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, LB.LBWebService.HelloWorldCompletedEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.LBWebService.LBWebService</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(LB.LBWebService.ConnectServerCompletedEventHandler)</signature>
                        <name>add_ConnectServerCompleted</name>
                    </method>
                    <method>
                        <signature>void(LB.LBWebService.HelloWorldCompletedEventHandler)</signature>
                        <name>add_HelloWorldCompleted</name>
                    </method>
                    <method>
                        <signature>void(LB.LBWebService.ReadClientFileInfoCompletedEventHandler)</signature>
                        <name>add_ReadClientFileInfoCompleted</name>
                    </method>
                    <method>
                        <signature>void(LB.LBWebService.ReadFileByteCompletedEventHandler)</signature>
                        <name>add_ReadFileByteCompleted</name>
                    </method>
                    <method>
                        <signature>void(LB.LBWebService.RunDirectSQLCompletedEventHandler)</signature>
                        <name>add_RunDirectSQLCompleted</name>
                    </method>
                    <method>
                        <signature>void(LB.LBWebService.RunProcedureCompletedEventHandler)</signature>
                        <name>add_RunProcedureCompleted</name>
                    </method>
                    <method>
                        <signature>void(LB.LBWebService.RunViewCompletedEventHandler)</signature>
                        <name>add_RunViewCompleted</name>
                    </method>
                    <method>
                        <signature>void(LB.LBWebService.User_InsertCompletedEventHandler)</signature>
                        <name>add_User_InsertCompleted</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>CancelAsync</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ConnectServer</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ConnectServerAsync</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ConnectServerAsync</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Url</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseDefaultCredentials</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>HelloWorld</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>HelloWorldAsync</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>HelloWorldAsync</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsLocalFileSystemWebService</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OnConnectServerOperationCompleted</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OnHelloWorldOperationCompleted</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OnReadClientFileInfoOperationCompleted</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OnReadFileByteOperationCompleted</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OnRunDirectSQLOperationCompleted</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OnRunProcedureOperationCompleted</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OnRunViewOperationCompleted</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OnUser_InsertOperationCompleted</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Data.DataTable()</signature>
                        <name>ReadClientFileInfo</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReadClientFileInfoAsync</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ReadClientFileInfoAsync</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](string, int32, int32)</signature>
                        <name>ReadFileByte</name>
                    </method>
                    <method>
                        <signature>void(string, int32, int32)</signature>
                        <name>ReadFileByteAsync</name>
                    </method>
                    <method>
                        <signature>void(string, int32, int32, object)</signature>
                        <name>ReadFileByteAsync</name>
                    </method>
                    <method>
                        <signature>void(LB.LBWebService.ConnectServerCompletedEventHandler)</signature>
                        <name>remove_ConnectServerCompleted</name>
                    </method>
                    <method>
                        <signature>void(LB.LBWebService.HelloWorldCompletedEventHandler)</signature>
                        <name>remove_HelloWorldCompleted</name>
                    </method>
                    <method>
                        <signature>void(LB.LBWebService.ReadClientFileInfoCompletedEventHandler)</signature>
                        <name>remove_ReadClientFileInfoCompleted</name>
                    </method>
                    <method>
                        <signature>void(LB.LBWebService.ReadFileByteCompletedEventHandler)</signature>
                        <name>remove_ReadFileByteCompleted</name>
                    </method>
                    <method>
                        <signature>void(LB.LBWebService.RunDirectSQLCompletedEventHandler)</signature>
                        <name>remove_RunDirectSQLCompleted</name>
                    </method>
                    <method>
                        <signature>void(LB.LBWebService.RunProcedureCompletedEventHandler)</signature>
                        <name>remove_RunProcedureCompleted</name>
                    </method>
                    <method>
                        <signature>void(LB.LBWebService.RunViewCompletedEventHandler)</signature>
                        <name>remove_RunViewCompleted</name>
                    </method>
                    <method>
                        <signature>void(LB.LBWebService.User_InsertCompletedEventHandler)</signature>
                        <name>remove_User_InsertCompleted</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable(string, string, string&amp;, bool&amp;)</signature>
                        <name>RunDirectSQL</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>RunDirectSQLAsync</name>
                    </method>
                    <method>
                        <signature>void(string, string, object)</signature>
                        <name>RunDirectSQLAsync</name>
                    </method>
                    <method>
                        <signature>System.Data.DataSet(int32, string, unsigned int8[], unsigned int8[], System.Data.DataTable&amp;, string&amp;, bool&amp;)</signature>
                        <name>RunProcedure</name>
                    </method>
                    <method>
                        <signature>void(int32, string, unsigned int8[], unsigned int8[])</signature>
                        <name>RunProcedureAsync</name>
                    </method>
                    <method>
                        <signature>void(int32, string, unsigned int8[], unsigned int8[], object)</signature>
                        <name>RunProcedureAsync</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable(int32, string, string, string, string, string&amp;, bool&amp;)</signature>
                        <name>RunView</name>
                    </method>
                    <method>
                        <signature>void(int32, string, string, string, string)</signature>
                        <name>RunViewAsync</name>
                    </method>
                    <method>
                        <signature>void(int32, string, string, string, string, object)</signature>
                        <name>RunViewAsync</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Url</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseDefaultCredentials</name>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>User_Insert</name>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>User_InsertAsync</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, object)</signature>
                        <name>User_InsertAsync</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>LB.LBWebService.ConnectServerCompletedEventHandler</signature>
                        <name>ConnectServerCompleted</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Threading.SendOrPostCallback</signature>
                        <name>ConnectServerOperationCompleted</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>LB.LBWebService.HelloWorldCompletedEventHandler</signature>
                        <name>HelloWorldCompleted</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Threading.SendOrPostCallback</signature>
                        <name>HelloWorldOperationCompleted</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>LB.LBWebService.ReadClientFileInfoCompletedEventHandler</signature>
                        <name>ReadClientFileInfoCompleted</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Threading.SendOrPostCallback</signature>
                        <name>ReadClientFileInfoOperationCompleted</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>LB.LBWebService.ReadFileByteCompletedEventHandler</signature>
                        <name>ReadFileByteCompleted</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Threading.SendOrPostCallback</signature>
                        <name>ReadFileByteOperationCompleted</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>LB.LBWebService.RunDirectSQLCompletedEventHandler</signature>
                        <name>RunDirectSQLCompleted</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Threading.SendOrPostCallback</signature>
                        <name>RunDirectSQLOperationCompleted</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>LB.LBWebService.RunProcedureCompletedEventHandler</signature>
                        <name>RunProcedureCompleted</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Threading.SendOrPostCallback</signature>
                        <name>RunProcedureOperationCompleted</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>LB.LBWebService.RunViewCompletedEventHandler</signature>
                        <name>RunViewCompleted</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Threading.SendOrPostCallback</signature>
                        <name>RunViewOperationCompleted</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>useDefaultCredentialsSetExplicitly</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>LB.LBWebService.User_InsertCompletedEventHandler</signature>
                        <name>User_InsertCompleted</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Threading.SendOrPostCallback</signature>
                        <name>User_InsertOperationCompleted</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Url</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseDefaultCredentials</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>LB.LBWebService.ConnectServerCompletedEventHandler</signature>
                        <name>ConnectServerCompleted</name>
                    </event>
                    <event>
                        <signature>LB.LBWebService.HelloWorldCompletedEventHandler</signature>
                        <name>HelloWorldCompleted</name>
                    </event>
                    <event>
                        <signature>LB.LBWebService.ReadClientFileInfoCompletedEventHandler</signature>
                        <name>ReadClientFileInfoCompleted</name>
                    </event>
                    <event>
                        <signature>LB.LBWebService.ReadFileByteCompletedEventHandler</signature>
                        <name>ReadFileByteCompleted</name>
                    </event>
                    <event>
                        <signature>LB.LBWebService.RunDirectSQLCompletedEventHandler</signature>
                        <name>RunDirectSQLCompleted</name>
                    </event>
                    <event>
                        <signature>LB.LBWebService.RunProcedureCompletedEventHandler</signature>
                        <name>RunProcedureCompleted</name>
                    </event>
                    <event>
                        <signature>LB.LBWebService.RunViewCompletedEventHandler</signature>
                        <name>RunViewCompleted</name>
                    </event>
                    <event>
                        <signature>LB.LBWebService.User_InsertCompletedEventHandler</signature>
                        <name>User_InsertCompleted</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>LB.LBWebService.ReadClientFileInfoCompletedEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(object[], System.Exception, bool, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable()</signature>
                        <name>get_Result</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object[]</signature>
                        <name>results</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Data.DataTable()</signature>
                        <name>Result</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>LB.LBWebService.ReadClientFileInfoCompletedEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, LB.LBWebService.ReadClientFileInfoCompletedEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, LB.LBWebService.ReadClientFileInfoCompletedEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.LBWebService.ReadFileByteCompletedEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(object[], System.Exception, bool, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>get_Result</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object[]</signature>
                        <name>results</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>unsigned int8[]()</signature>
                        <name>Result</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>LB.LBWebService.ReadFileByteCompletedEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, LB.LBWebService.ReadFileByteCompletedEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, LB.LBWebService.ReadFileByteCompletedEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.LBWebService.RunDirectSQLCompletedEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(object[], System.Exception, bool, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_bolIsError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrorMsg</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable()</signature>
                        <name>get_Result</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object[]</signature>
                        <name>results</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>bolIsError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrorMsg</name>
                    </property>
                    <property>
                        <signature>System.Data.DataTable()</signature>
                        <name>Result</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>LB.LBWebService.RunDirectSQLCompletedEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, LB.LBWebService.RunDirectSQLCompletedEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, LB.LBWebService.RunDirectSQLCompletedEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.LBWebService.RunProcedureCompletedEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(object[], System.Exception, bool, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_bolIsError</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable()</signature>
                        <name>get_dtOut</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrorMsg</name>
                    </method>
                    <method>
                        <signature>System.Data.DataSet()</signature>
                        <name>get_Result</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object[]</signature>
                        <name>results</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>bolIsError</name>
                    </property>
                    <property>
                        <signature>System.Data.DataTable()</signature>
                        <name>dtOut</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrorMsg</name>
                    </property>
                    <property>
                        <signature>System.Data.DataSet()</signature>
                        <name>Result</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>LB.LBWebService.RunProcedureCompletedEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, LB.LBWebService.RunProcedureCompletedEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, LB.LBWebService.RunProcedureCompletedEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.LBWebService.RunViewCompletedEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(object[], System.Exception, bool, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_bolIsError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrorMsg</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable()</signature>
                        <name>get_Result</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object[]</signature>
                        <name>results</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>bolIsError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrorMsg</name>
                    </property>
                    <property>
                        <signature>System.Data.DataTable()</signature>
                        <name>Result</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>LB.LBWebService.RunViewCompletedEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, LB.LBWebService.RunViewCompletedEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, LB.LBWebService.RunViewCompletedEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.LBWebService.User_InsertCompletedEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, System.ComponentModel.AsyncCompletedEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.AsyncCompletedEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.Properties.Settings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>LB.Properties.Settings()</signature>
                        <name>get_Default</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LB_Base_LBWebService_LBWebService</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>LB.Properties.Settings</signature>
                        <name>defaultInstance</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>LB.Properties.Settings()</signature>
                        <name>Default</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LB_Base_LBWebService_LBWebService</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>LB.WinFunction.Args.CallSPArgs</name>
                <methodlist>
                    <method>
                        <signature>void(int32, System.Data.DataTable)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable()</signature>
                        <name>get_DTSPIN</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SPType</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Data.DataTable</signature>
                        <name>_SPIN</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_SPType</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Data.DataTable()</signature>
                        <name>DTSPIN</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>SPType</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>LB.WinFunction.Args.CallSPHandle</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(LB.WinFunction.Args.CallSPArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(LB.WinFunction.Args.CallSPArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.WinFunction.Args.CallViewArgs</name>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ViewType</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>_ViewType</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>ViewType</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>LB.WinFunction.Args.CallViewHandle</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(LB.WinFunction.Args.CallViewArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(LB.WinFunction.Args.CallViewArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.WinFunction.enLBDbType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>AnsiString</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>AnsiStringFixedLength</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>Binary</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>Boolean</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>Byte</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>Bytes</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>Currency</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>Date</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>DateTime</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>DateTime2</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>DateTimeOffset</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>Decimal</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>Double</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>Guid</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>Int16</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>Int32</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>Int64</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>NText</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>Object</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>SByte</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>Single</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>String</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>StringFixedLength</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>Time</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>UInt16</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>UInt32</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>UInt64</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>VarNumeric</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>Xml</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.WinFunction.ExecuteSQL</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(LB.WinFunction.Args.CallSPHandle)</signature>
                        <name>add_CallSPEvent</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable(string)</signature>
                        <name>CallDirectSQL</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable(string)</signature>
                        <name>CallDirectSQL_Service</name>
                    </method>
                    <method>
                        <signature>void(int32, LB.WinFunction.LBDbParameterCollection, System.Data.DataSet&amp;, System.Collections.Generic.Dictionary`2&lt;string,object&gt;&amp;)</signature>
                        <name>CallSP</name>
                    </method>
                    <method>
                        <signature>void(int32, System.Data.DataTable, System.Data.DataSet&amp;, System.Data.DataTable&amp;)</signature>
                        <name>CallSP</name>
                    </method>
                    <method>
                        <signature>void(int32, System.Data.DataTable, System.Data.DataSet&amp;, System.Data.DataTable&amp;)</signature>
                        <name>CallSP_Service</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable(int32)</signature>
                        <name>CallView</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable(int32, string, string, string)</signature>
                        <name>CallView</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable(int32)</signature>
                        <name>CallView_Service</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable(int32, string, string, string)</signature>
                        <name>CallView_Service</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Compress</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Decompress</name>
                    </method>
                    <method>
                        <signature>System.Data.DataSet(string)</signature>
                        <name>DeserializeDataSet</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable(string)</signature>
                        <name>DeserializeDataTable</name>
                    </method>
                    <method>
                        <signature>object(unsigned int8[])</signature>
                        <name>DeserializeObject</name>
                    </method>
                    <method>
                        <signature>IFaxBusiness.IMyFaxBusiness()</signature>
                        <name>GetWebService</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool&amp;, int32&amp;, System.DateTime&amp;, System.Collections.Generic.Dictionary`2&lt;string,object&gt;&amp;)</signature>
                        <name>ReadRegister</name>
                    </method>
                    <method>
                        <signature>void(LB.WinFunction.Args.CallSPHandle)</signature>
                        <name>remove_CallSPEvent</name>
                    </method>
                    <method>
                        <signature>string(System.Data.DataTable)</signature>
                        <name>SerializeDataTableXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](object)</signature>
                        <name>SerializeObject</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>TestConnectStatus</name>
                    </method>
                    <method>
                        <signature>System.Data.DataSet(string)</signature>
                        <name>UnRarDataSet</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Data.DataTable(string)</signature>
                        <name>UnRarDataTable</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>LB.WinFunction.Args.CallSPHandle</signature>
                        <name>CallSPEvent</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist>
                    <event>
                        <signature>LB.WinFunction.Args.CallSPHandle</signature>
                        <name>CallSPEvent</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>LB.WinFunction.IniClass</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(string, string, string, System.Text.StringBuilder, int32, string)</signature>
                        <name>GetPrivateProfileString</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>ReadValue</name>
                    </method>
                    <method>
                        <signature>int64(string, string, string, string)</signature>
                        <name>WritePrivateProfileString</name>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>WriteValue</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>sPath</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.WinFunction.LBCommonHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.DialogResult(string, string, System.Windows.Forms.MessageBoxButtons)</signature>
                        <name>ConfirmMessage</name>
                    </method>
                    <method>
                        <signature>void(System.Exception)</signature>
                        <name>DealWithErrorMessage</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ShowCommonMessage</name>
                    </method>
                    <method>
                        <signature>void(System.Exception)</signature>
                        <name>ShowCommonMessage</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>ToBool</name>
                    </method>
                    <method>
                        <signature>System.Decimal(object)</signature>
                        <name>ToByte</name>
                    </method>
                    <method>
                        <signature>System.Decimal(object)</signature>
                        <name>ToDecimal</name>
                    </method>
                    <method>
                        <signature>float32(object)</signature>
                        <name>ToFloat</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>ToInt</name>
                    </method>
                    <method>
                        <signature>int64(object)</signature>
                        <name>ToLong</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.WinFunction.LBDbParameterCollection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(LB.WinFunction.LBParameter)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;LB.WinFunction.LBParameter&gt;)</signature>
                        <name>AddRange</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>bool(LB.WinFunction.LBParameter)</signature>
                        <name>Contains</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>Contains</name>
                    </method>
                    <method>
                        <signature>void(LB.WinFunction.LBParameter[], int32)</signature>
                        <name>CopyTo</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsReadOnly</name>
                    </method>
                    <method>
                        <signature>LB.WinFunction.LBParameter(int32)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>LB.WinFunction.LBParameter(string)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;LB.WinFunction.LBParameter&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>bool(LB.WinFunction.LBParameter)</signature>
                        <name>Remove</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;LB.WinFunction.LBParameter&gt;</signature>
                        <name>Parameters</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Count</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsReadOnly</name>
                    </property>
                    <property>
                        <signature>LB.WinFunction.LBParameter(int32)</signature>
                        <name>Item</name>
                    </property>
                    <property>
                        <signature>LB.WinFunction.LBParameter(string)</signature>
                        <name>Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>LB.WinFunction.LBDbType</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Type(LB.WinFunction.enLBDbType)</signature>
                        <name>GetSqlDbType</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.WinFunction.LBDESEncrypt</name>
                <newname>a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>EncryptString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Text.Encoding()</signature>
                        <name>get_EncodingMode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EncryptKey</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Text.Encoding)</signature>
                        <name>set_EncodingMode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EncryptKey</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Security.Cryptography.DES</signature>
                        <name>des</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Text.Encoding</signature>
                        <name>encoding</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>iv</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>key</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.WinFunction.LBEncrypt</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>DESDecrypt</name>
                    </method>
                    <method>
                        <signature>string(object, string)</signature>
                        <name>DESEncrypt</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>DESEncrypt</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,object&gt;(string)</signature>
                        <name>GetRegisterModelInfo</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.WinFunction.LBParameter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, LB.WinFunction.enLBDbType, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, LB.WinFunction.enLBDbType, object, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>IsNullToEmptyOrZero</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NullIfEmptyOrZero</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Data.ParameterDirection</signature>
                        <name>Direction</name>
                    </field>
                    <field>
                        <signature>LB.WinFunction.enLBDbType</signature>
                        <name>LBDBType</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ParameterName</name>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>Value</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.WinFunction.LBRegisterPermission</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>VerifyPermission</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>DeadLine</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>IsRegister</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>Permission_ModelSynchorToServer</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ProductType</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.WinFunction.LogHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteLog</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.WinFunction.LoginInfo</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>EncryptPassword</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsVerifySuccess</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LoginName</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LoginTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MachineIP</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MachineName</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_UserID</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_UserType</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable(int32)</signature>
                        <name>GetUserInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Data.DataTable(string)</signature>
                        <name>GetUserInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsVerifySuccess</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LoginName</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LoginTime</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_UserID</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_UserType</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>VerifyLogin</name>
                    </method>
                    <method>
                        <signature>bool(int32, string)</signature>
                        <name>VerifyPassword</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_IsVerifySuccess</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_LoginName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>_LoginTime</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_UserID</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_UserType</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsVerifySuccess</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LoginName</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>LoginTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MachineIP</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MachineName</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>UserID</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>UserType</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>LB.WinFunction.ProcessStep</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>AddStep</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Data.DataTable</signature>
                        <name>mdtStep</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.WinFunction.RemotingObject</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetIPAddress</name>
                    </method>
                    <method>
                        <signature>object(System.Type)</signature>
                        <name>GetRemotingObject</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.WinFunction.Report.ReportHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, bool, System.Data.DataRow, System.Data.DataTable)</signature>
                        <name>UpdateReportParameterDataSet</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>LB.WinFunction.Report.RequestReportArgs</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>TKey</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>TValue</name>
                </genericparameter>
                <name>LB.WinFunction.SerializableDictionary`2</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Xml.Schema.XmlSchema()</signature>
                        <name>GetSchema</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader)</signature>
                        <name>ReadXml</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>WriteXml</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
        </module>
    </mapping>
    <statistics>
        <statisticline>
            <description>Total Classes</description>
            <statistic>39</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods</description>
            <statistic>234</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields</description>
            <statistic>80</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties</description>
            <statistic>32</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events</description>
            <statistic>9</statistic>
        </statisticline>
        <statisticline>
            <description>Total Classes Renamed</description>
            <statistic>2</statistic>
            <statistic>5.13%</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods Renamed</description>
            <statistic>22</statistic>
            <statistic>9.40%</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields Renamed</description>
            <statistic>41</statistic>
            <statistic>51.25%</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00%</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'a'</description>
            <statistic>15</statistic>
            <statistic>6.41%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'b'</description>
            <statistic>1</statistic>
            <statistic>0.43%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'c'</description>
            <statistic>1</statistic>
            <statistic>0.43%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'd'</description>
            <statistic>1</statistic>
            <statistic>0.43%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'e'</description>
            <statistic>1</statistic>
            <statistic>0.43%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'f'</description>
            <statistic>1</statistic>
            <statistic>0.43%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'g'</description>
            <statistic>1</statistic>
            <statistic>0.43%</statistic>
        </statisticline>
    </statistics>
</dotfuscatorMap>